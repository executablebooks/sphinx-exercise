<document source="solution-exercise-gated.md">
    <section ids="gated-solutions-to-exercise-gated-md" names="gated\ solutions\ to\ exercise-gated.md">
        <title>
            Gated Solutions to exercise-gated.md
        <paragraph>
            A solution using the gated directive
        <solution_node classes="solution" docname="solution-exercise-gated" hidden="False" ids="gated-exercise-solution-1" label="gated-exercise-solution-1" names="gated-exercise-solution-1" serial_number="0" target_label="gated-exercise-1" title="Solution to" type="solution">
            <solution_title>
                Solution to
            <section ids="solution-content">
                <paragraph>
                    This is a solution to Gated Exercise 1
                <container cell_index="1" cell_metadata="{}" classes="cell" exec_count="1" nb_element="cell_code">
                    <container classes="cell_input" nb_element="cell_code_source">
                        <literal_block language="ipython3" xml:space="preserve">
                            import numpy as np
                            import matplotlib.pyplot as plt
                            
                            # Fixing random state for reproducibility
                            np.random.seed(19680801)
                            
                            dt = 0.01
                            t = np.arange(0, 30, dt)
                            nse1 = np.random.randn(len(t))                 # white noise 1
                            nse2 = np.random.randn(len(t))                 # white noise 2
                            
                            # Two signals with a coherent part at 10Hz and a random part
                            s1 = np.sin(2 * np.pi * 10 * t) + nse1
                            s2 = np.sin(2 * np.pi * 10 * t) + nse2
                            
                            fig, axs = plt.subplots(2, 1)
                            axs[0].plot(t, s1, t, s2)
                            axs[0].set_xlim(0, 2)
                            axs[0].set_xlabel('time')
                            axs[0].set_ylabel('s1 and s2')
                            axs[0].grid(True)
                            
                            cxy, f = axs[1].cohere(s1, s2, 256, 1. / dt)
                            axs[1].set_ylabel('coherence')
                            
                            fig.tight_layout()
                            plt.show()
                    <container classes="cell_output" nb_element="cell_code_output">
                        <container nb_element="mime_bundle">
                            <container mime_type="text/plain">
                                <literal_block classes="output text_plain" language="myst-ansi" xml:space="preserve">
                                    <Figure size 640x480 with 2 Axes>
                            <container mime_type="image/png">
                                <image candidates="{'*': '_build/jupyter_execute/e54e180c35e94dd0df219d42c2477d4c5763db55da00a21803bd9ce8f9859cb2.png'}" uri="_build/jupyter_execute/e54e180c35e94dd0df219d42c2477d4c5763db55da00a21803bd9ce8f9859cb2.png">
                <paragraph>
                    With some follow up text to the solution
        <paragraph>
            and then a solution to 
            <pending_xref refdoc="solution-exercise-gated" refdomain="std" refexplicit="False" reftarget="gated-exercise-2" reftype="ref" refwarn="True">
                <inline classes="xref std std-ref">
                    gated-exercise-2
        <paragraph>
            A solution using the gated directive
        <solution_node classes="solution" docname="solution-exercise-gated" hidden="False" ids="gated-exercise-solution-2" label="gated-exercise-solution-2" names="gated-exercise-solution-2" serial_number="1" target_label="gated-exercise-2" title="Solution to" type="solution">
            <solution_title>
                Solution to
            <section ids="solution-content">
                <paragraph>
                    This is a solution to Gated Exercise 2
                <container cell_index="3" cell_metadata="{}" classes="cell" exec_count="2" nb_element="cell_code">
                    <container classes="cell_input" nb_element="cell_code_source">
                        <literal_block language="ipython3" xml:space="preserve">
                            import numpy as np
                            import matplotlib.pyplot as plt
                            
                            # Fixing random state for reproducibility
                            np.random.seed(19680801)
                            
                            dt = 0.01
                            t = np.arange(0, 30, dt)
                            nse1 = np.random.randn(len(t))                 # white noise 1
                            nse2 = np.random.randn(len(t))                 # white noise 2
                            
                            # Two signals with a coherent part at 10Hz and a random part
                            s1 = np.sin(2 * np.pi * 10 * t) + nse1
                            s2 = np.sin(2 * np.pi * 10 * t) + nse2
                            
                            fig, axs = plt.subplots(2, 1)
                            axs[0].plot(t, s1, t, s2)
                            axs[0].set_xlim(0, 2)
                            axs[0].set_xlabel('time')
                            axs[0].set_ylabel('s1 and s2')
                            axs[0].grid(True)
                            
                            cxy, f = axs[1].cohere(s1, s2, 256, 1. / dt)
                            axs[1].set_ylabel('coherence')
                            
                            fig.tight_layout()
                            plt.show()
                    <container classes="cell_output" nb_element="cell_code_output">
                        <container nb_element="mime_bundle">
                            <container mime_type="text/plain">
                                <literal_block classes="output text_plain" language="myst-ansi" xml:space="preserve">
                                    <Figure size 640x480 with 2 Axes>
                            <container mime_type="image/png">
                                <image candidates="{'*': '_build/jupyter_execute/e54e180c35e94dd0df219d42c2477d4c5763db55da00a21803bd9ce8f9859cb2.png'}" uri="_build/jupyter_execute/e54e180c35e94dd0df219d42c2477d4c5763db55da00a21803bd9ce8f9859cb2.png">
                <paragraph>
                    With some follow up text to the solution
        <section ids="references-to-solutions" names="references\ to\ solutions">
            <title>
                References to Solutions
            <paragraph>
                This is a reference to 
                <pending_xref refdoc="solution-exercise-gated" refdomain="std" refexplicit="False" reftarget="gated-exercise-solution-1" reftype="ref" refwarn="True">
                    <inline classes="xref std std-ref">
                        gated-exercise-solution-1
